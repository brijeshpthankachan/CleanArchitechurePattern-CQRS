// <auto-generated />
using IonCareer.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IonCareer.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(IonCareerDbContext))]
    [Migration("20230118100132_Added Roles Table")]
    partial class AddedRolesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IonCareer.Domain.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            RoleName = "Director"
                        },
                        new
                        {
                            Id = 2L,
                            RoleName = "VicePresident"
                        },
                        new
                        {
                            Id = 3L,
                            RoleName = "HrRecruiter"
                        },
                        new
                        {
                            Id = 4L,
                            RoleName = "Employee"
                        });
                });

            modelBuilder.Entity("IonCareer.Domain.Entities.WeatherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeatherDatas");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Humidity = 2,
                            Location = "Loc5",
                            Temperature = "40"
                        },
                        new
                        {
                            Id = 1,
                            Humidity = 0,
                            Location = "Loc4",
                            Temperature = "40"
                        },
                        new
                        {
                            Id = 2,
                            Humidity = 0,
                            Location = "Loc3",
                            Temperature = "40"
                        },
                        new
                        {
                            Id = 3,
                            Humidity = 0,
                            Location = "Loc3",
                            Temperature = "40"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
